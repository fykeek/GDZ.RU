<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABjAMADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9wx+zD8NVOR8PPAwI6H+wbX/4iptS/Zz+H2tX0lzeeBPBt3cy
        nMks2i20juenLFMmuzoru/tTG35vbSv/AIn/AJnH/Z2Ety+yjb/Cv8jhf+GYPhp/0TzwN/4IbX/43R/w
        zB8NP+ieeBv/AAQ2v/xuu6oqv7Wx3/P6f/gT/wAyf7Mwf/PqP/gK/wAjhf8AhmD4af8ARPPA3/ghtf8A
        43R/wzB8NP8Aonngb/wQ2v8A8bruqRmCKSTgDkk9qP7Wx3/P6f8A4E/8w/szB/8APqP/AICv8jhv+GYP
        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
</value>
  </data>
</root>